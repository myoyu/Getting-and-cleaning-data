`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote` <- read.csv("~/Work/Projects/EV/Data/All_TX/mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote.csv", quote="")
View(`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote`)
class(`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote`)
`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote`
colnames(`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote`)
data <- subset(`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote`, select=c("X.Data.Instr..address"),"len","IR.DR")
data <- subset(`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote`, select=c("X.Data.Instr..address","len","IR.DR"))
data
bad<-is.na(data)
bad
data_good <- data[!bad]
data_good
data
rm(data_good)
good <- complete.cases(`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote`)
good
data[good,]
data[good]
good
data
good
data_ good <- data[good,]
data_good <- data[good,]
data_good
paste(`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote`)
paste(data_good)
?paste
data_good["len"]
paste(data_good("X.Data.Instr..address"),data_good("len"),data_good("IR.DR"),sep="-1")
paste(data_good["X.Data.Instr..address"],data_good["len"],data_good["IR.DR"],sep="-1")
paste(data_good["X.Data.Instr..address",],data_good["len",],data_good["IR.DR",],sep="-1")
paste(data_good["X.Data.Instr..address"][],data_good["len"][],data_good["IR.DR"][],sep="-1")
paste(data_good[1,],sep="-1")
data_good
data_instr <- subset(`mphy_dfx_tx_amplitude_margin_test_seed_1+STAP0.remote`, select=c("X.Data.Instr..address"))
data_instr
data_instr <- subset(data_good, select=c("X.Data.Instr..address"))
data_instr
paste(data_instr,sep="-1")
class(paste(data_instr,sep="-1"))
find.packages("devtools")
install.packages("devtools")
find.packages("devtools")
library("devtools")
find_rtools()
install.packages("KernSmooth")
library("KernSmooth")
print sum;
print(sum);
sum
print(total);
message(total);
cat(total);
total
source('~/.active-rstudio-document')
total
print(c(total));
exp(0+i)
exp(1+i)
k=1
exp(0+ki)
exp(0+(k)i)
total = total + (-1)^(k+j)*exp(-(complex(0,k)+complex(0,2*j)));
total=0;
for(k in 0:2)
{
for(j in 0:2)
{
total = total + (-1)^(k+j)*exp(-(complex(0,k)+complex(0,2*j)));
}
}
print(c(total));
source('~/.active-rstudio-document')
total = total + (-1)^(k+j)*exp(-(complex(0,2*pi*k/3)+complex(0,2*pi*2*j/3)));
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
}
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
total=0;
pi=3.14;
for(k in 0:2)
{
for(j in 0:2)
{
total = total + (-1)^(k+j)*exp(complex(0,-2*pi*k/3))*exp(complex(0,-2*pi*2*j/3));
}
}
print(c(total));
total=0;
pi=3.14;
for(k in 0:2)
{
for(j in 0:2)
{
total = total + (-1)^(k+j)*exp(complex(0,-2*pi*k/3))*exp(complex(0,-2*pi*2*j/3));
}
}
print(c(total));
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
run
install.packages("rJava")
.libPaths()
total=0;
pi=3.14;
for(k in 0:2)
{
for(j in 0:2)
{
total = total + (-1)^(k+j)*exp(complex(real = 0,imaginary = -2*pi*k/3))*exp(complex(real = 0,imaginary = -2*pi*2*j/3));
}
}
print(c(total));
total=0;
pi=3.14;
for(k in 0:2)
{
for(j in 0:2)
{
total = total + (-1)^(k+j)*exp(complex(real = 0,imaginary = -2*22*k/3*7))*exp(complex(real = 0,imaginary = -2*22*2*j/3*7));
}
}
print(c(total));
total=0;
pi=3.14;
for(k in 0:2)
{
for(j in 0:2)
{
total = total + (-1)^(k+j)*exp(complex(real = 0,imaginary = -2*22*k/3*7))*exp(complex(real = 0,imaginary = -2*22*2*j/3*7));
}
}
print(c(total));
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
debug()
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
browser()
ls
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
exit()
end()
q
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
total=0;
pi=3.14;
for(k in 0:2)
{
for(j in 0:2)
{
total = total + (-1)^(k+j)*exp(complex(real = 0,imaginary = -2*22*k/3*7))*exp(complex(real = 0,imaginary = -2*22*2*j/3*7));
}
}
print(c(total));
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
total = total + (-1)^(k+j)*exp(complex(real = 0,imaginary = -2*22*k/3*7))*exp(complex(real = 0,imaginary = -2*22*2*j/3*7));
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
list(t=10)
ret = list(t=10)
ret["t"]
ret$t
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/q5.R', echo=TRUE)
debugSource('~/Work/Training/Digital image and video processing/assignment 4/q5.R')
1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16
complex(real = 0,imaginary = -2*22*1/3*7)
exp(-2.1)
3.8^2+0.5^2
sqrt(3.8^2+0.5^2)
source('~/Work/Training/Digital image and video processing/assignment 4/mse.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/mse.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/mse.R', echo=TRUE)
v1 = c(1 1 2 2 1 1 2 2 2 2 3 4 2 2 5 6);
v0 = c(1 1);
source('~/Work/Training/Digital image and video processing/assignment 4/mse.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/mse.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/mse.R', echo=TRUE)
vo = c(10,20,10,10,20,40,10,10,30,40,20,20,50,60,20,20);
v1 = c(10,20,10,10,20,40,10,10,20,20,30,40,20,20,50,60);
v2 = c(20,30,20,20,30,50,20,20,40,50,30,30,60,70,30,30);
v2 = c(10,20,30,40,20,40,50,60,10,10,20,20,10,10,20,20);
mae(vo,v1);
source('~/Work/Training/Digital image and video processing/assignment 4/mae.R', echo=TRUE)
source('~/Work/Training/Digital image and video processing/assignment 4/mae.R', echo=TRUE)
install package("rimage")
install.packages("rimage")
install.packages("RimageJ")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
data(iris)
iris$Sepal.Length.Category <- cut(iris$Sepal.Length, breaks=c(4,5.2,6.1,7.0,8), right = FALSE)
iris$Sepal.Width.Category <- cut(iris$Sepal.Width, breaks=c(2,2.5,3.0,3.6,4.5), right = FALSE)
table(iris$Species, iris$Sepal.Length.Category)
prop.table(table(iris$Species, iris$Sepal.Length.Category))
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R')
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R')
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R')
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R')
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R')
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R')
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R', echo=TRUE)
q
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R')
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R', echo=TRUE)
qs
chi2
source('D:/Data/Training/Core concept in data analysis/assignment/contingency_table.R', echo=TRUE)
chi
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
(dataMat+1) / total
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
p
dim(dataMat)[2]
rowSums(dataMat)
prob[,1];
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
dataMat
rowSums(dataMat)
total
p
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
p
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
p
LP_xk
log(100/dim(dataMatLog)[1])
x
dim(dataMatLog)[1]
total
dim(dataMat)[2]
dataMat
dim(dataMatLog)[1]
x
prob
total
p
(dataMat+1)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
dataMatLog
LP_xk
dim(dataMatLog)[1]
nrow(data)
cat = factor(data[,1]);
cat
table(cat)
str(table(cat))
t = table(cat)
t[1]
str(t[1])
t["names"]
t["A"]
cat
t
t["A"]
t["B"]
as.numeric(t["A"])
aggregate(. ~ Article,data=data,sum);
aggregate(. ~ data[,1],data=data,sum);
data[,1]
aggregate(by=list(c("Article")),data=data,sum);
aggregate(by=list(c("Article")),data=data,FUN=sum);
aggregate(by=list(data,c("Article")),FUN=sum);
aggregate(data,by=list(c("Article")),FUN=sum);
aggregate(data,by=list(c("Article")),FUN=sum);
aggregate(data,by=list(("Article")),FUN=sum);
aggregate(data,by=list(c("Article")),FUN=sum);
aggregate(data,by=list(Article),FUN=sum);
data
aggregate(x=data,by=list(Article),FUN=sum);
data
aggregate(x=data,by=list(woman),FUN=sum);
aggregate(
data,by=list(woman),FUN=sum);
aggregate(
data,by=list(data$Article),FUN=sum);
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
aggregate(
data,by=list(data$Article),FUN=sum);
data
data$Article
data = read.csv("D:\\Data\\Training\\Core concept in data analysis\\assignment\\training.txt",sep=" ");
data$Article
data1 = read.csv("D:\\Data\\Training\\Core concept in data analysis\\assignment\\training.txt",sep=" ");
data1$Article
dim(dataMatLog)[1]
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
freq
LP_xk
as.matrix(freq)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
as.matrix(freq)
log(100/as.matrix(freq))
log(100/4
log(100/4
log(100/4)
LP_xk
LP_xk + log(100/4)
log(100/dim(dataMatLog)[1]);
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
log(100/dim(dataMatLog)[1]);
log(100*as.matrix(freq))
log(100/as.matrix(freq))
dim(dataMatLog)[1]
log(100/dim(dataMatLog)[1]);
dim(dataMatLog)[1]
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
log(100*as.matrix(freq)[1]/row)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
source('D:/Data/Training/Core concept in data analysis/assignment/naiveBayes.R', echo=TRUE)
install.packages('RMySQL',type='source')
make -f "Makevars.win" -f "C:/PROGRA~1/R/R-30~1.3/etc/x64/Makeconf" -f "C:/PROGRA~1/R/R-30~1.3/share/make/winshlib.mk" SHLIB="RMySQL.dll" WIN=64 TCLBIN=64 OBJECTS="RS-DBI.o RS-MySQL.o"
make -f 'Makevars.win' -f "C:/PROGRA~1/R/R-30~1.3/etc/x64/Makeconf" -f "C:/PROGRA~1/R/R-30~1.3/share/make/winshlib.mk" SHLIB="RMySQL.dll" WIN=64 TCLBIN=64 OBJECTS="RS-DBI.o RS-MySQL.o"
make
Sys.getenv('MYSQL_HOME')
#read in the feature name that describe the feature data columns
featureName = read.csv("UCI HAR Dataset\\features.txt",sep="",header=FALSE);
#extract the feature name with "mean()" and "std()" naming in it
meanStdIndex = grepl("mean()\\>|std()\\>",featureName$V2);
featureName$V2 = featureName$V2[meanStdIndex,];
setwd("D:\\Data\\Training\\Getting and cleaning data\\assignment");
source('D:/Data/Training/Getting and cleaning data/assignment/Run_Analysis.R', echo=TRUE)
write.table(tidyData,"tidy_dataset.txt",sep=",",row.names=FALSE);
source('D:/Data/Training/Getting and cleaning data/assignment/Run_Analysis.R', echo=TRUE)
